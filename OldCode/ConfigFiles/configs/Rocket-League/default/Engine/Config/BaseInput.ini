[Engine.PlayerInput]
MoveForwardSpeed=1200
MoveStrafeSpeed=1200
LookRightScale=300
LookUpScale=-250
MouseSensitivity=60.0
DoubleClickTime=0.250000
bEnableMouseSmoothing=true
; --- General bindings



[UnrealEd.ObjectEditorViewportInput]
Bindings=(Command="TRANSACTION REDO",Name=Y,Control=True)
Bindings=(Command="TRANSACTION REDO",Name=Z,Control=True,Shift=True)
Bindings=(Command="TRANSACTION UNDO",Name=Z,Control=True)

[Engine.Console]
ConsoleKey=Tilde
TypeKey=Tab
MaxScrollbackSize=1024
HistoryBot=-1
ManualAutoCompleteList=(Command="Exit",Desc="Exit (Exits the game)")
ManualAutoCompleteList=(Command="DebugCreatePlayer 1",Desc="")
ManualAutoCompleteList=(Command="FreezeAt",Desc="Locks the player view and rendering time.")
ManualAutoCompleteList=(Command="SSSwapControllers",Desc="")
ManualAutoCompleteList=(Command="Open",Desc="Open <MapName> (Opens the specified map)")
ManualAutoCompleteList=(Command="DisplayAll",Desc="DisplayAll <ClassName> <PropertyName> (Display property values for instances of classname)")
ManualAutoCompleteList=(Command="DisplayAllState",Desc="DisplayAllState <ClassName> (Display state names for all instances of classname)")
ManualAutoCompleteList=(Command="DisplayClear",Desc="DisplayClear (Clears previous DisplayAll entries)")
ManualAutoCompleteList=(Command="FlushPersistentDebugLines",Desc="FlushPersistentDebugLines (Clears persistent debug line cache)")
ManualAutoCompleteList=(Command="GetAll ",Desc="GetAll <ClassName> <PropertyName> <Name=ObjectInstanceName> <OUTER=ObjectInstanceName> <SHOWDEFAULTS> <SHOWPENDINGKILLS> <DETAILED> (Log property values of all instances of classname)")
ManualAutoCompleteList=(Command="GetAllState",Desc="GetAllState <ClassName> (Log state names for all instances of classname)")
ManualAutoCompleteList=(Command="Obj List ",Desc="Obj List <Class=ClassName> <Type=MetaClass> <Outer=OuterObject> <Package=InsidePackage> <Inside=InsideObject>")
ManualAutoCompleteList=(Command="Obj ListContentRefs",Desc="Obj ListContentRefs <Class=ClassName> <ListClass=ClassName>")
ManualAutoCompleteList=(Command="Obj Classes",Desc="Obj Classes (Shows all classes)")
ManualAutoCompleteList=(Command="Obj Refs",Desc="Name=<ObjectName> Class=<OptionalObjectClass> Lists referencers of the specified object")
ManualAutoCompleteList=(Command="EditActor",Desc="EditActor <Class=ClassName> or <Name=ObjectName> or TRACE")
ManualAutoCompleteList=(Command="EditDefault",Desc="EditDefault <Class=ClassName>")
ManualAutoCompleteList=(Command="EditObject",Desc="EditObject <Class=ClassName> or <Name=ObjectName> or <ObjectName>")
ManualAutoCompleteList=(Command="ReloadCfg ",Desc="ReloadCfg <Class/ObjectName> (Reloads config variables for the specified object/class)")
ManualAutoCompleteList=(Command="ReloadLoc ",Desc="ReloadLoc <Class/ObjectName> (Reloads localized variables for the specified object/class)")
ManualAutoCompleteList=(Command="Set ",Desc="Set <ClassName> <PropertyName> <Value> (Sets property to value on objectname)")
ManualAutoCompleteList=(Command="Show BOUNDS",Desc="Show BOUNDS (Displays bounding boxes for all visible objects)")
ManualAutoCompleteList=(Command="Show BSP",Desc="Show BSP (Toggles BSP rendering)")
ManualAutoCompleteList=(Command="Show COLLISION",Desc="Show COLLISION (Toggles collision rendering)")
ManualAutoCompleteList=(Command="Show COVER",Desc="Show COVER (Toggles cover rendering)")
ManualAutoCompleteList=(Command="Show DECALS",Desc="Show DECALS (Toggles decal rendering)")
ManualAutoCompleteList=(Command="Show FOG",Desc="Show FOG (Toggles fog rendering)")
ManualAutoCompleteList=(Command="Show LEVELCOLORATION",Desc="Show LEVELCOLORATION (Toggles per-level coloration)")
ManualAutoCompleteList=(Command="Show PATHS",Desc="Show PATHS (Toggles path rendering)")
ManualAutoCompleteList=(Command="Show POSTPROCESS",Desc="Show POSTPROCESS (Toggles post process rendering)")
ManualAutoCompleteList=(Command="Show SKELMESHES",Desc="Show SKELMESHES (Toggles skeletal mesh rendering)")
ManualAutoCompleteList=(Command="Show TERRAIN",Desc="Show TERRAIN (Toggles terrain rendering)")
ManualAutoCompleteList=(Command="Show VOLUMES",Desc="Show VOLUMES (Toggles volume rendering)")
ManualAutoCompleteList=(Command="Show SPLINES",Desc="Show SPLINES (Toggles spline rendering)")
ManualAutoCompleteList=(Command="ShowSet",Desc="Sets a show flag to enable it")
ManualAutoCompleteList=(Command="ShowClear",Desc="Clears a show flag to disable it")
ManualAutoCompleteList=(Command="Stat FPS",Desc="Stat FPS (Shows FPS counter)")
ManualAutoCompleteList=(Command="Stat UNIT",Desc="Stat UNIT (Shows hardware unit framerate)")
ManualAutoCompleteList=(Command="Stat LEVELS",Desc="Stat LEVELS (Displays level streaming info)")
ManualAutoCompleteList=(Command="Stat GAME",Desc="Stat GAME (Displays game performance stats)")
ManualAutoCompleteList=(Command="Stat MEMORY",Desc="Stat MEMORY (Displays memory stats)")
ManualAutoCompleteList=(Command="Stat XBOXMEMORY",Desc="Stat XBOXMEMORY (Displays Xbox memory stats while playing on PC)")
ManualAutoCompleteList=(Command="Stat PHYSICS",Desc="Stat PHYSICS (Displays physics performance stats)")
ManualAutoCompleteList=(Command="Stat STREAMING",Desc="Stat STREAMING (Displays basic texture streaming stats)")
ManualAutoCompleteList=(Command="Stat STREAMINGDETAILS",Desc="Stat STREAMINGDETAILS (Displays detailed texture streaming stats)")
ManualAutoCompleteList=(Command="Stat COLLISION",Desc="Stat COLLISION")
ManualAutoCompleteList=(Command="Stat PARTICLES",Desc="Stat PARTICLES")
ManualAutoCompleteList=(Command="Stat SCRIPT",Desc="Stat SCRIPT")
ManualAutoCompleteList=(Command="Stat AUDIO",Desc="Stat AUDIO")
ManualAutoCompleteList=(Command="Stat ANIM",Desc="Stat ANIM")
ManualAutoCompleteList=(Command="Stat NET",Desc="Stat NET")
ManualAutoCompleteList=(Command="Stat LIST",Desc="Stat LIST Groups/Sets/Group (List groups of stats, saved sets, or specific stats within a specified group)")
ManualAutoCompleteList=(Command="Stat splitscreen",Desc="")
ManualAutoCompleteList=(Command="ListTextures",Desc="ListTextures (Lists all loaded textures and their current memory footprint)")
ManualAutoCompleteList=(Command="ListUncachedStaticLightingInteractions",Desc="ListUncachedStaticLightingInteractions (Lists all uncached static lighting interactions, which causes Lighting needs to be rebuilt messages)")
#placed here so we can type res<tab> to restartlevel as we often do that
ManualAutoCompleteList=(Command="RestartLevel",Desc="RestartLevel (restarts the level)")
#from UnAudio.cpp
ManualAutoCompleteList=(Command="ListSounds",Desc="ListSounds (Lists all the loaded sounds and their memory footprint)")
ManualAutoCompleteList=(Command="ListWaves",Desc="ListWaves (List the WaveInstances and whether they have a source)")
ManualAutoCompleteList=(Command="ListSoundClasses",Desc="ListSoundClasses (Lists a summary of loaded sound collated by class)")
ManualAutoCompleteList=(Command="ListSoundModes",Desc="ListSoundModes (Lists loaded sound modes)")
ManualAutoCompleteList=(Command="ListAudioComponents",Desc="ListAudioComponents (Dumps a detailed list of all AudioComponent objects)")
ManualAutoCompleteList=(Command="ListSoundDurations",Desc="ListSoundDurations")
ManualAutoCompleteList=(Command="PlaySoundCue",Desc="PlaySoundCue (Lists a summary of loaded sound collated by class)")
ManualAutoCompleteList=(Command="PlaySoundWave",Desc="PlaySoundWave")
ManualAutoCompleteList=(Command="SetSoundMode",Desc="SetSoundMode <ModeName>")
ManualAutoCompleteList=(Command="DisableLowPassFilter",Desc="DisableLowPassFilter")
ManualAutoCompleteList=(Command="DisableEQFilter",Desc="DisableEQFilter")
ManualAutoCompleteList=(Command="IsolateDryAudio",Desc="IsolateDryAudio")
ManualAutoCompleteList=(Command="IsolateReverb",Desc="IsolateReverb")
ManualAutoCompleteList=(Command="ResetSoundState",Desc="ResetSoundState (Resets volumes to default and removes test filters)")
ManualAutoCompleteList=(Command="ModifySoundClass",Desc="ModifySoundClass <SoundClassName> Vol=<new volume>")
ManualAutoCompleteList=(Command="DisableAllScreenMessages",Desc="Disables all on-screen warnings/messages")
ManualAutoCompleteList=(Command="EnableAllScreenMessages",Desc="Enables all on-screen warnings/messages")
ManualAutoCompleteList=(Command="ToggleAllScreenMessages",Desc="Toggles display state of all on-screen warnings/messages")
ManualAutoCompleteList=(Command="CaptureMode",Desc="Toggles display state of all on-screen warnings/messages")
ManualAutoCompleteList=(Command="ShowDebug NET",Desc="")
ManualAutoCompleteList=(Command="ShowDebug PHYSICS",Desc="")
ManualAutoCompleteList=(Command="ShowDebug COLLISION",Desc="")
ManualAutoCompleteList=(Command="ShowDebug AI",Desc="")
ManualAutoCompleteList=(Command="ShowDebug CAMERA",Desc="")
ManualAutoCompleteList=(Command="ShowDebug WEAPON",Desc="")
ManualAutoCompleteList=(Command="ShowDebug ANIMATION",Desc="")
ManualAutoCompleteList=(Command="ShowDebug INPUT",Desc="")
ManualAutoCompleteList=(Command="memleakcheck",Desc="")
ManualAutoCompleteList=(Command="togglehdwarning",Desc="")
ManualAutoCompleteList=(Command="Stat SOUNDWAVES",Desc="Stat SOUNDWAVES (Shows active SoundWaves)")
ManualAutoCompleteList=(Command="Stat SOUNDCUES",Desc="Stat SOUNDCUES (Shows active SoundCues)")
ManualAutoCompleteList=(Command="Stat SOUNDS",Desc="Stat SOUNDS <?> <sort=distance|class|name|waves|default> <-debug> <off> (Shows active SoundCues and SoundWaves)")
ManualAutoCompleteList=(Command="STARTMOVIECAPTURE",Desc="STARTMOVIECAPTURE")
ManualAutoCompleteList=(Command="STOPMOVIECAPTURE",Desc="STOPMOVIECAPTURE")
ManualAutoCompleteList=(Command="DoMemLeakChecking 30",Desc="Sets a timer to do a MemLeakCheck every N seconds")
ManualAutoCompleteList=(Command="StopMemLeakChecking",Desc="Stops the periodic MemLeakCheck that was started via DoMemLeakChecking")
ManualAutoCompleteList=(Command="FlushLog",Desc="FlushLog (Force log file to write to disk)")

[GameFramework.DebugCameraController]
PrimaryKey=LeftMouseButton
SecondaryKey=RightMouseButton
UnselectKey=Escape
bShowSelectedInfo=true

[Engine.UIDataStore_InputAlias]
; The following are for example purposes only - in your game's DefaultInput.ini, you should use a ! at the top of the section to clear these entries
InputAliases=(AliasName="Term_Controller",PlatformInputKeys[0]=(ButtonFontMarkupString="GAMEPAD"),PlatformInputKeys[1]=(ButtonFontMarkupString="GAMEPAD_360"),PlatformInputKeys[2]=(ButtonFontMarkupString="GAMEPAD_PS3"))
InputAliases=(AliasName="Term_GamerCard",PlatformInputKeys[0]=(ButtonFontMarkupString="X BUTTON"))
InputAliases=(AliasName="CycleLeft",PlatformInputKeys[0]=(InputKeyData=(InputKeyName="XboxTypeS_LeftShoulder"),ButtonFontMarkupString="LEFT SHOULDER"))
InputAliases=(AliasName="CycleRight",PlatformInputKeys[0]=(InputKeyData=(InputKeyName="XboxTypeS_RightShoulder"),ButtonFontMarkupString="RIGHT SHOULDER"))
InputAliases=(AliasName="AnyKey",PlatformInputKeys[0]=(InputKeyData=(InputKeyName="*"),ButtonFontMarkupString="ANY KEY"))
InputAliases=(AliasName="Accept",PlatformInputKeys[0]=(InputKeyData=(InputKeyName="Enter"),ButtonFontMarkupString="ACCEPT"))
InputAliases=(AliasName="Cancel",PlatformInputKeys[0]=(InputKeyData=(InputKeyName="Escape"),ButtonFontMarkupString="CANCEL"))
InputAliases=(AliasName="Conditional1",PlatformInputKeys[1]=(InputKeyData=(InputKeyName="XboxTypeS_X"),ButtonFontMarkupString="X BUTTON"))
InputAliases=(AliasName="Conditional2",PlatformInputKeys[1]=(InputKeyData=(InputKeyName="XboxTypeS_Y"),ButtonFontMarkupString="Y BUTTON"))
InputAliases=(AliasName="Start",PlatformInputKeys[1]=(InputKeyData=(InputKeyName="XboxTypeS_Start"),ButtonFontMarkupString="START"))
InputAliases=(AliasName="Back",PlatformInputKeys[1]=(InputKeyData=(InputKeyName="XboxTypeS_Back"),ButtonFontMarkupString="BACK"))
InputAliases=(AliasName="ShiftUp",PlatformInputKeys[0]=(InputKeyData=(InputKeyName="Subtract"),ButtonFontMarkupString="SUBTRACT"))
InputAliases=(AliasName="ShiftDown",PlatformInputKeys[0]=(InputKeyData=(InputKeyName="Add"),ButtonFontMarkupString="ADD"))
InputAliases=(AliasName="ShiftUpPage",PlatformInputKeys[0]=(InputKeyData=(InputKeyName="PageUp"),ButtonFontMarkupString="PAGEUP"))
InputAliases=(AliasName="ShiftDownPage",PlatformInputKeys[0]=(InputKeyData=(InputKeyName="PageDown"),ButtonFontMarkupString="PAGEDOWN"))
;InputAliases=(AliasName="ShiftBoth",PlatformInputKeys[1]=(InputKeyData=(InputKeyName=""),ButtonFontMarkupString=""))  @todo
InputAliases=(AliasName="Defaults",PlatformInputKeys[1]=(InputKeyData=(InputKeyName="XboxTypeS_LeftTrigger"),ButtonFontMarkupString="LEFT TRIGGER"))
InputAliases=(AliasName="MouseLeft",PlatformInputKeys[0]=(InputKeyData=(InputKeyName="LeftMouseButton"),ButtonFontMarkupString="LEFT MOUSE"))
InputAliases=(AliasName="MouseRight",PlatformInputKeys[0]=(InputKeyData=(InputKeyName="RightMouseButton"),ButtonFontMarkupString="RIGHT MOUSE"))
InputAliases=(AliasName="ClickLeft",PlatformInputKeys[1]=(InputKeyData=(InputKeyName="XboxTypeS_LeftThumbstick"),ButtonFontMarkupString="CLICK LEFT STICK"))
InputAliases=(AliasName="ClickRight",PlatformInputKeys[1]=(InputKeyData=(InputKeyName="XboxTypeS_RightThumbstick"),ButtonFontMarkupString="CLICK RIGHT STICK"))

[Scaleform.KeyMap]
FullKeyboard=1
XboxTypeS_DPad_Left=Left
XboxTypeS_DPad_Right=Right
XboxTypeS_DPad_Up=Up
XboxTypeS_DPad_Down=Down
Gamepad_RightStick_Left=GAMEPAD_RS_Left
Gamepad_RightStick_Right=GAMEPAD_RS_Right
Gamepad_RightStick_Up=GAMEPAD_RS_Up
Gamepad_RightStick_Down=GAMEPAD_RS_Down
Gamepad_LeftStick_Left=Left
Gamepad_LeftStick_Right=Right
Gamepad_LeftStick_Up=Up
Gamepad_LeftStick_Down=Down
XboxTypeS_A=GAMEPAD_A
XboxTypeS_B=GAMEPAD_B
XboxTypeS_X=GAMEPAD_X
XboxTypeS_Y=GAMEPAD_Y
XboxTypeS_LeftShoulder=GAMEPAD_L1
XboxTypeS_LeftTrigger=GAMEPAD_L2
XboxTypeS_LeftThumbStick=GAMEPAD_L3
XboxTypeS_RightShoulder=GAMEPAD_R1
XboxTypeS_RightTrigger=GAMEPAD_R2
XboxTypeS_RightThumbStick=GAMEPAD_R3
XboxTypeS_Start=START
XboxTypeS_Back=BACK


[Scaleform.GamepadMouse]
X=None
Y=None
